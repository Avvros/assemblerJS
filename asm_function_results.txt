Здесь описаны объекты, которые могут вернуть те или иные функции.

function get_command:
	err: 'string' // ошибка, если есть - всего остального нет.
	
	type: ['r', 'sreg', 'm', 'imm', 'rel', 'moffs', 'ptr', self_register, const]
	
		'ptr':
			b_size - base size
			d_size - displacement size
			data - готовые байты адреса
	
		'r', 'sreg':
			size: 8, 16 or 32
			mod: '11' // понадобится, если 2 операнд или есть imm как операнд
			r_m: '000' - '111' // код регистра
			
			
		'm', 'moffs':
			size: 8, 32 or 'depends on other'
			mem_adr
			
					
		'imm', 'rel', const:
			size: 8, 16 or 32
			value: const signed number


mem_adr - общее название свойств:
	adr_type: 'reg', 'reg+disp', 'disponly', 'reg+reg*n', 'disp+reg+reg*n', 'disp+reg*n'
	mod: // значение MOD в MRM байте
	r_m: // значение R/M в MRM байте
	?sib: // SIB байт, в 16й системе
	?d_c_str: // байтовая строка смещения, в 16й системе
	
	




p.s причина, по которой нельзя отказаться от type - тип imm
			

function asm:
	Функция asm должна возвращать объект:

	{address, err, codes, cmd_text}, где

		address - вернуть тот самый адрес, что ей дали;

		err - текстом сообщение об ошибке, наличие ошибки будет проверяться if(err);

		codes - массив байт - кодов команды процессора;

		cmd_text - канонический вид команды, в крайнем случае можно вернуть то, что дали, 
		в идеале должно быть то, чтобы вернул дизассемблер, если бы получил коды команд.
		
	/*
		Если вместо имени процедуры используется адрес, то он может быть записан в формате СЕГМЕНТ:СМЕЩЕНИЕ. 
		Если в качестве адреса указать только смещение, то считается, что адрес расположен в том же сегменте, 
		что и команда CALL (при этом выполняется ближний вызов процедуры).
		
		near - когда дано только смещение для call
		example - call 0x1
		far - когда дан весь адрес
	*/